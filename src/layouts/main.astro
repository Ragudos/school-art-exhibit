---
import Footer from "@/components/footer.astro";
import Header from "@/components/header.astro";
import type { SeoProps } from "@/components/seo.astro";
import Seo from "@/components/seo.astro";
import "@/styles/globals.css";
import { defaultLocale, supportedLocales } from "astro.config.mjs";
import { ViewTransitions } from "astro:transitions";

import { THEME_KEY } from "@/lib/consts";
import { getRelativeLocaleUrl } from "astro:i18n";
export type Props = SeoProps;

const props = Astro.props;
---

<html lang={Astro.currentLocale || defaultLocale}>
	<head>
		<Fragment
			set:html={`<script>var __THEME_KEY__ = "${THEME_KEY}"</script>`}
		/>
		<script is:inline>
			(function () {
				try {
					const mql = window.matchMedia(
						"(prefers-color-scheme: dark)",
					);

					function setTheme() {
						const st = localStorage.getItem(__THEME_KEY__);

						if (st === "dark" || st === "light") {
							document.documentElement.setAttribute(
								"data-theme",
								st,
							);
						} else {
							if (mql.matches) {
								document.documentElement.setAttribute(
									"data-theme",
									"dark",
								);
							} else {
								document.documentElement.setAttribute(
									"data-theme",
									"light",
								);
							}

							mql.addEventListener("change", onMediaChange);
						}
					}

					function onMediaChange(evt) {
						try {
							const activeTheme =
								localStorage.getItem(__THEME_KEY__);

							if (
								activeTheme === "dark" ||
								activeTheme === "light"
							) {
								return;
							}

							if (evt.matches) {
								document.documentElement.setAttribute(
									"data-theme",
									"dark",
								);
							} else {
								document.documentElement.setAttribute(
									"data-theme",
									"light",
								);
							}
						} catch (_err) {}
					}

					setTheme();

					document.addEventListener(
						"astro:before-preparation",
						() => {
							mql.removeEventListener("change", onMediaChange);
						},
					);
					document.addEventListener("astro:after-swap", setTheme);
				} catch (_err) {
					alert(
						"Dark mode is not available. Please upgrade your browser to support it.",
					);
				}
			})();
		</script>
		<meta name="charset" content="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<meta name="http-equiv" content="X-UA-Compatible" content="IE=edge" />
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

		<link
			rel="apple-touch-icon"
			sizes="180x180"
			href="/apple-touch-icon.png"
		/>
		<link
			rel="icon"
			type="image/png"
			sizes="32x32"
			href="/favicon-32x32.png"
		/>
		<link
			rel="icon"
			type="image/png"
			sizes="16x16"
			href="/favicon-16x16.png"
		/>
		<link rel="manifest" href="/site.webmanifest" />

		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=IBM+Plex+Serif:wght@400;700&family=Roboto:wght@400;500;700&display=swap"
			rel="stylesheet"
		/>

		<Seo {...props} />
		<ViewTransitions />
		<slot name="head" />
	</head>
	<body>
		<Header />
		<main class="min-h-[80dvh] py-8">
			<slot />
		</main>
		<Footer />
		<section
			transition:persist
			class="fixed touch-none pointer-events-none z-50 top-2 right-4 toast-container"
		>
			<div
				class="flex gap-2 items-center bg-accent text-accent-foreground px-4 py-2 shadow-md shadow-accent/50 w-40 rounded-sm"
				id="loading-toast"
			>
				<div
					class="shrink-0 w-4 h-4 animate-spin border-2 border-slate-500/50 border-r-accent-foreground rounded-full"
				>
				</div>
				<div>Loading...</div>
			</div>
		</section>
		<style>
			#loading-toast {
				transition: transform 250ms ease;
				transform: scale(0);
			}

			.toast-container > * {
				pointer-events: auto;
				touch-action: auto;
			}
		</style>
		<script>
			let timeout: number | undefined;

			document.addEventListener("astro:before-preparation", () => {
				timeout = setTimeout(() => {
					const loadingToast =
						document.getElementById("loading-toast")!;

					loadingToast.style.transform = "scale(1)";
				}, 250);
			});

			document.addEventListener("astro:after-swap", () => {
				if (timeout) {
					clearTimeout(timeout);
					timeout = undefined;
				}

				const loadingToast = document.getElementById("loading-toast")!;

				loadingToast.style.transform = "scale(0)";
			});
		</script>
	</body>
</html>
